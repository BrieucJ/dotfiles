#!/usr/bin/env bash

#COLORS
reset="\[\e[0m\]"
red="\[\e[31m\]"
green="\[\e[32m\]"
yellow="\[\e[33m\]"
blue="\[\e[34m\]"
purple="\[\e[35m\]"
cyan="\[\e[36m\]"

git_branch() {
    echo "$(git branch --show-current 2> /dev/null)"
}

git_status(){
    local is_git="$(git rev-parse --is-inside-work-tree 2> /dev/null)"
    local git_status="$(git status --porcelain 2> /dev/null)"
    local output
    if [[ $is_git ]]
    then
        local upstream=$(git rev-parse --symbolic-full-name --abbrev-ref @{upstream} 2> /dev/null)
        local upstream_diff=$(git log --pretty=oneline --topo-order --left-right ${branch}...${upstream} 2> /dev/null)
        local behind="$(grep -o ">" <<< $upstream_diff | wc -l)"
        [[ $behind -ne 0 ]] && output+="${behind}↓"
        local git_status="$(git status --porcelain 2> /dev/null)"
        local ahead="$(grep -o 'M' <<< $git_status | wc -l)"
        [[ $ahead -ne 0 ]] && output+="${ahead}↑"
        local diff="$(grep -o '??' <<< $git_status | wc -l)"
        [[ $diff -ne 0 ]] && output+="${diff}≠"
        [ "$behind" -eq "0" ] && [ "$ahead" -eq "0" ] && [ "$diff" -eq "0" ] && output=⚑
        echo "(${output})" | tr -d ' '
    fi
}

PS1="$blue\u$reset @" #user
[[ $USER == "root" || $SSH_TTY ]] && PS1+=" at $red\h$reset" #SSH
PS1+=" $cyan\w " #working directory
PS1+="$red\$(git_branch)" #git branch
PS1+="$yellow \$(git_status)" #git status
PS1+="$reset\n$ "